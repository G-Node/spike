

2 - for files - output properties like (file size, real filename - done), google features like embedding / direct link
2 - for all objects - inherit properties like number of previews, number of downloads, who is viewing it right now etc.
2 - for state_machine: implement logging mechanism (each state change is logged etc.) or find smth in the net, ready-to-go for django
2 - for "project" or "experiment" - output who is currently viewing the object (like in forums)
2 - personal user references (like probationers / stimuli / hardware models / TAGS etc) - use GLOBAL or user-linked values??
3 - templates. Like "Create experiment from a template" and so on.
2 - events. Like a home page. Public actions, new projects etc. Integrate using notifications module!!! 
CANCEL - can I assign a dataset to experiments of other users? A files to others' datasets? Projects?
1 - Name DATASETS? and EXPERIMENTS by the date they were created. To simplify naming process. Default naming problem. FILES to have just a number - automatic!!!
DONE - to experiments, datasets and datafiles - right panel - show who can see your object (privacy level etc.)
1 - to add two more fields in Your Experiments: Volume and Actions (assign files, change state)
DONE - to add filtering to Your Experiments: months
DONE - in the details page of the Experiment / Dataset / Datafile: add button (link) to add / delete users to share
2 - in CREATION forms for datasets / experiments make useful search to select experiment/project, using javascript (like privacy settings assignment)
DONE - add 'linkling' functions everywhere (assign a file to a dataset, add a file to the experiment and so on)
DONE - move "Trash" to "Trash" in Inbox. Make redirection to the page with active objects after submit.
2 - add LABS dictionnary. And all the related logic for users.
2 - make a "User" object search everywhere (send a message - recipient, add a friend - search for, share with - search a user, add a project member - search etc.)
2 - Notification settings - invent a way to exclude unnecessary settings
3 - threaded comments for experiments and files (for datasets.. no)
3 - make reusable forms - add privacy settings, add / remove datasets from exprt, etc.
2 - move the UploadProgress.js to the file upload form. Check whether other js scripts are required...
2 - get the final solution for the file-based data container!!! Remove 777!!
2 - implement the odML integration - import / export data
2 - implement metadata extraction from files. Using Neuroshare on Wine. Picture of voltage traces? AJAX scrolling?
3 - implement "Applications" - so people can share their home-made applications, promote them etc.
3 - we need to extend the admin interface at some point.
2 - SSH and / or FTP access to files. Need Feasibility Study.


Metadata Sections changes
-1. Move wikis and comments to the Section. Have an additional properties (according to a type below) indicating whether to include comments, or wikis, or smth else (in the future).

+2. Move security mechanisms to Section. Modify mechanisms, so they work with inheritance.

+3. Make Sections independent of "linked" objects:
    - either introduce MtoM by having "type + ID" for every section
    - either in the object itself (like property). Worse?
JUST DO links belonging to the object itself!!!

+4. Add a "type" (project, terminology, common etc) to the section
 5. Introduce a "star" - a helper mechanism for data selection (not for sections?)

 6. Migration scripts



Move TimeSeries into AnalogSignals

Move and extend search

Create a Message Queue Manager

Implement multiple file upload

Implement odML automatic search, processing helper, import and export engine 

Implement a sections tree and overall file/analogsignal management in GWT (??)












