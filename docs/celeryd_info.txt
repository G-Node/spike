1. Install and configure neuroshare

1.1 Install nsWineProxy
https://github.com/G-Node/nswineproxy
see the dependencies!
sudo apt-get install automake
sudo apt-get install mingw32

1.2 install python-neuroshare: see installation guide
https://github.com/G-Node/python-neuroshare

1.3 copy the neuroshare libraries 
source hal10:/usr/lib/neuroshare/
destination srv2:/usr/lib/neuroshare/

2. install and configure Celery task broker

2.1 install and configure: see installation guide here (bottom of the page)
http://trac.g-node.pri/g-node-portal/wiki/installationGuide

2.2 Configure Task broker as a daemon
http://docs.celeryq.org/en/latest/cookbook/daemonizing.html

a. create a configuration file (attached) as /etc/default/celeryd

b. copy the init script 
sudo cp /<source-files>/celery-2.3.3/contrib/generic-init.d/celeryd /etc/init.d/

c. create folders for logs/pid, update permissions
sudo mkdir /var/log/celery
sudo chmod 774 /var/log/celery
sudo chgrp <daemon_group> /var/log/celery

sudo mkdir /var/run/celery
sudo chmod 774 /var/run/celery
sudo chgrp <daemon_group> /var/run/celery

d. start daemon as /etc/init.d/celeryd start, should result in
celeryd-multi v2.3.3
> Starting nodes...
	> w1.hal10: OK

e. give access to the /tmp/ and /media_root/ folders to the user under which the task broker will operate

3. Project updates

3.1 update settings.py in the project root, add:
 - TMP_FILES_PATH = '/tmp/'
 - 'neo_api' in INSTALLED_APPS
 - 'djcelery' in INSTALLED_APPS

3.2 run 'python manage.py syncdb' from the project folder to create neo_api tables

3.3 run scripts to change datafile model tables (attached)

3.4 restart apache, restart celeryd



